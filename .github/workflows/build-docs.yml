name: Build documentation

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Set up poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: "2.1.1"

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install --with docs

      - name: Build documentation
        run: |
          poetry run python -m mkdocs build --clean --site-dir ./_build/html --config-file mkdocs.yml

      - uses: actions/upload-artifact@v4
        name: Upload docs as artifact
        with:
          name: docs-html
          path: './_build/html'
          if-no-files-found: error
